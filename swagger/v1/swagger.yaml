---
openapi: 3.0.1
info:
  title: Trip API V1
  version: v1
paths:
  "/api/v1/trips":
    get:
      summary: Finds all trips for a User
      tags:
      - Trips
      security: []
      operationId: findAllTrips
      description: List all Trips that belong to a user with id, location, and name
      parameters:
      - name: user_id
        in: query
        schema:
          "$ref": "#/components/schemas/all_trips"
      responses:
        '200':
          description: Successful
    post:
      summary: Creates a Trip for a User
      tags:
      - Trips
      security: []
      operationId: createTrip
      description: Creates a Trip for a User with all Trip information
      parameters: []
      responses:
        '201':
          description: Trip created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/trip"
        '400':
          description: Validation failed
  "/api/v1/trips/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: user_id
      in: query
      schema:
        type: integer
    get:
      summary: Finds one trip
      tags:
      - Trips
      security: []
      operationId: findOneTrip
      description: List a Trip that belongs to a user with all Trip information and
        Daily Itineraries
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/trip_show"
        '404':
          description: Couldn't find Trip with 'id'=2
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
        '400':
          description: 'Validation failed: Invalid User ID provided'
    patch:
      summary: Updates a Trip for a User
      tags:
      - Trips
      security: []
      operationId: updateTrip
      description: Updates a User's Trip information
      parameters: []
      responses:
        '200':
          description: Trip updated
        '400':
          description: 'Validation failed: Name can''t be blank'
        '404':
          description: Couldn't find Trip with 'id'=12
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/trip"
    delete:
      summary: Deletes a Trip for a User
      operationId: deleteTrip
      tags:
      - Trips
      security: []
      description: Updates a User's Trip information
      responses:
        '204':
          description: trip deleted
        '404':
          description: Couldn't find Trip with 'id'=12
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
components:
  schemas:
    not_found:
      type: object
      properties:
        message:
          type: string
    all_trips:
      properties:
        data:
          type: array
          properties:
            id:
              type: number
            type:
              type: string
            attributes:
              type: object
    trip:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: Disneyland in Tokyo!
                location:
                  type: string
                  example: Tokyo, Japan
                start_date:
                  type: string
                  example: Wed, 24 Apr 2024 06:42:40.385053000 UTC +00:00
                end_date:
                  type: string
                  example: Mon, 24 Jun 2024 14:15:24.410940000 UTC +00:00
                status:
                  type: string
                  example: in_progress
                total_budget:
                  type: integer
                  example: 4676
                user_id:
                  type: integer
                  example: 1
                total_expenses:
                  type: integer
                  example: 200
        required:
        - user_id
    trip_show:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: Disneyland in Tokyo!
                location:
                  type: string
                  example: Tokyo, Japan
                start_date:
                  type: string
                  example: Wed, 24 Apr 2024 06:42:40.385053000 UTC +00:00
                end_date:
                  type: string
                  example: Mon, 24 Jun 2024 14:15:24.410940000 UTC +00:00
                status:
                  type: string
                  example: in_progress
                total_budget:
                  type: integer
                  example: 4676
                user_id:
                  type: integer
                  example: 1
                total_expenses:
                  type: integer
                  example: 200
                daily_itineraries:
                  type: object
                  properties:
                    date:
                      type: array
                      example: '2024-06-12'
                    activities:
                      type: object
        required:
        - user_id
    accommodations:
      type: object
      required:
      - trip_id
      - name
      - address
      - lat
      - lon
      - type_of_accommodation
      - check_in
      - check_out
      - expenses
      properties:
        trip_id:
          type: integer
          example: 1
        name:
          type: string
          example: Mariott Monterey Bay
        address:
          type: string
          example: 7836 Haywood Throughway
        lat:
          type: number
          example: 26.885830851487825
        lon:
          type: number
          example: -162.29136075180418
        type_of_accommodation:
          type: string
          example: Hotel
        check_in:
          type: string
          example: Wed, 24 Apr 2024 06:42:40.385053000 UTC +00:00
        check_out:
          type: string
          example: Mon, 24 Jun 2024 14:15:24.410940000 UTC +00:00
        expenses:
          type: integer
          example: 3000
  securitySchemes: {}
servers:
- url: http://localhost:5000
